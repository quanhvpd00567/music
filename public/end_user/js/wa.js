!function(e){var t={};function r(a){if(t[a])return t[a].exports;var n=t[a]={i:a,l:!1,exports:{}};return e[a].call(n.exports,n,n.exports,r),n.l=!0,n.exports}r.m=e,r.c=t,r.d=function(e,t,a){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:a})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(r.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)r.d(a,n,function(t){return e[t]}.bind(null,n));return a},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="/",r(r.s=2)}([,,function(e,t,r){e.exports=r(3)},function(e,t){var r,a,n,o,i,s=0;function u(){n.update(),i.material.uniforms.uTime.value=s,a.render(o,r),s+=1/60,s%=20,requestAnimationFrame(u)}window.onload=function(){var e;(a=new THREE.WebGLRenderer({antialias:!0})).setSize(window.innerWidth,window.innerHeight),document.getElementById("three-container").appendChild(a.domElement),(r=new THREE.PerspectiveCamera(60,window.innerWidth/window.innerHeight,.1,5e3)).position.set(0,150,400),o=new THREE.Scene,(e=new THREE.PointLight(16777215,4,1e3,2)).position.set(0,400,0),o.add(e),(n=new THREE.OrbitControls(r,a.domElement)).enabled=!1,function(){var e=new THREE.PlaneGeometry(4,4),t=new THREE.BAS.PrefabBufferGeometry(e,1e5);t.computeVertexNormals();var r,a,n,s,u,E,h,f=t.createAttribute("aOffset",1),l=t.createAttribute("aStartPosition",3),c=t.createAttribute("aControlPoint1",3),d=t.createAttribute("aControlPoint2",3),m=t.createAttribute("aEndPosition",3),p=t.createAttribute("aAxisAngle",4),T=t.createAttribute("color",3);for(r=0,n=0;r<1e5;r++)for(s=r/1e5*20,a=0;a<e.vertices.length;a++)f.array[n++]=s;for(r=0,n=0;r<1e5;r++)for(u=-1e3,E=0,h=0,a=0;a<e.vertices.length;a++)l.array[n++]=u,l.array[n++]=E,l.array[n++]=h;for(r=0,n=0;r<1e5;r++)for(u=THREE.Math.randFloat(-400,400),E=THREE.Math.randFloat(400,600),h=THREE.Math.randFloat(-1200,-800),a=0;a<e.vertices.length;a++)c.array[n++]=u,c.array[n++]=E,c.array[n++]=h;for(r=0,n=0;r<1e5;r++)for(u=THREE.Math.randFloat(-400,400),E=THREE.Math.randFloat(-600,-400),h=THREE.Math.randFloat(800,1200),a=0;a<e.vertices.length;a++)d.array[n++]=u,d.array[n++]=E,d.array[n++]=h;for(r=0,n=0;r<1e5;r++)for(u=1e3,E=0,h=0,a=0;a<e.vertices.length;a++)m.array[n++]=u,m.array[n++]=E,m.array[n++]=h;var v=new THREE.Vector3,H=0;for(r=0,n=0;r<1e5;r++)for(v.x=THREE.Math.randFloatSpread(2),v.y=THREE.Math.randFloatSpread(2),v.z=THREE.Math.randFloatSpread(2),v.normalize(),H=Math.PI*THREE.Math.randInt(16,32),a=0;a<e.vertices.length;a++)p.array[n++]=v.x,p.array[n++]=v.y,p.array[n++]=v.z,p.array[n++]=H;var R,y,A,S=new THREE.Color;for(r=0,n=0;r<1e5;r++)for(R=r/1e5,y=THREE.Math.randFloat(.4,.6),A=THREE.Math.randFloat(.4,.6),S.setHSL(R,y,A),a=0;a<e.vertices.length;a++)T.array[n++]=S.r,T.array[n++]=S.g,T.array[n++]=S.b;var b=new THREE.BAS.PhongAnimationMaterial({vertexColors:THREE.VertexColors,shading:THREE.FlatShading,side:THREE.DoubleSide,uniforms:{uTime:{type:"f",value:0},uDuration:{type:"f",value:20}},shaderFunctions:[THREE.BAS.ShaderChunk.quaternion_rotation,THREE.BAS.ShaderChunk.cubic_bezier],shaderParameters:["uniform float uTime;","uniform float uDuration;","attribute float aOffset;","attribute vec3 aStartPosition;","attribute vec3 aControlPoint1;","attribute vec3 aControlPoint2;","attribute vec3 aEndPosition;","attribute vec4 aAxisAngle;"],shaderVertexInit:["float tProgress = mod((uTime + aOffset), uDuration) / uDuration;","float angle = aAxisAngle.w * tProgress;","vec4 tQuat = quatFromAxisAngle(aAxisAngle.xyz, angle);"],shaderTransformNormal:["objectNormal = rotateVector(tQuat, objectNormal);"],shaderTransformPosition:["transformed = rotateVector(tQuat, transformed);","transformed += cubicBezier(aStartPosition, aControlPoint1, aControlPoint2, aEndPosition, tProgress);"]},{specular:16711680,shininess:20});(i=new THREE.Mesh(t,b)).frustumCulled=!1,o.add(i)}(),requestAnimationFrame(u)},THREE.BAS={},THREE.BAS.ShaderChunk={},THREE.BAS.ShaderChunk.animation_time="float tDelay = aAnimation.x;\nfloat tDuration = aAnimation.y;\nfloat tTime = clamp(uTime - tDelay, 0.0, tDuration);\nfloat tProgress = ease(tTime, 0.0, 1.0, tDuration);\n",THREE.BAS.ShaderChunk.cubic_bezier="vec3 cubicBezier(vec3 p0, vec3 c0, vec3 c1, vec3 p1, float t)\n{\n    vec3 tp;\n    float tn = 1.0 - t;\n\n    tp.xyz = tn * tn * tn * p0.xyz + 3.0 * tn * tn * t * c0.xyz + 3.0 * tn * t * t * c1.xyz + t * t * t * p1.xyz;\n\n    return tp;\n}\n",THREE.BAS.ShaderChunk.ease_in_cubic="float ease(float t, float b, float c, float d) {\n  return c*(t/=d)*t*t + b;\n}\n",THREE.BAS.ShaderChunk.ease_in_quad="float ease(float t, float b, float c, float d) {\n  return c*(t/=d)*t + b;\n}\n",THREE.BAS.ShaderChunk.ease_out_cubic="float ease(float t, float b, float c, float d) {\n  return c*((t=t/d - 1.0)*t*t + 1.0) + b;\n}\n",THREE.BAS.ShaderChunk.quaternion_rotation="vec3 rotateVector(vec4 q, vec3 v)\n{\n    return v + 2.0 * cross(q.xyz, cross(q.xyz, v) + q.w * v);\n}\n\nvec4 quatFromAxisAngle(vec3 axis, float angle)\n{\n    float halfAngle = angle * 0.5;\n    return vec4(axis.xyz * sin(halfAngle), cos(halfAngle));\n}\n",THREE.BAS.PrefabBufferGeometry=function(e,t){THREE.BufferGeometry.call(this),this.prefabGeometry=e,this.prefabCount=t,this.prefabVertexCount=e.vertices.length,this.bufferDefaults()},THREE.BAS.PrefabBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype),THREE.BAS.PrefabBufferGeometry.prototype.constructor=THREE.BAS.PrefabBufferGeometry,THREE.BAS.PrefabBufferGeometry.prototype.bufferDefaults=function(){for(var e=this.prefabGeometry.faces.length,t=3*this.prefabGeometry.faces.length,r=this.prefabVertexCount=this.prefabGeometry.vertices.length,a=[],n=0;n<e;n++){var o=this.prefabGeometry.faces[n];a.push(o.a,o.b,o.c)}var i=new Uint32Array(this.prefabCount*t),s=new Float32Array(this.prefabCount*r*3);this.setIndex(new THREE.BufferAttribute(i,1)),this.addAttribute("position",new THREE.BufferAttribute(s,3));for(var u=0,E=0;u<this.prefabCount;u++){for(var h=0;h<r;h++,E+=3){var f=this.prefabGeometry.vertices[h];s[E]=f.x,s[E+1]=f.y,s[E+2]=f.z}for(var l=0;l<t;l++)i[u*t+l]=a[l]+u*r}},THREE.BAS.PrefabBufferGeometry.prototype.computeVertexNormals=function(){var e=this.index,t=this.attributes,r=t.position.array;void 0===t.normal&&this.addAttribute("normal",new THREE.BufferAttribute(new Float32Array(r.length),3));for(var a,n,o,i=t.normal.array,s=new THREE.Vector3,u=new THREE.Vector3,E=new THREE.Vector3,h=new THREE.Vector3,f=new THREE.Vector3,l=e.array,c=3*this.prefabGeometry.faces.length,d=0;d<c;d+=3)a=3*l[d+0],n=3*l[d+1],o=3*l[d+2],s.fromArray(r,a),u.fromArray(r,n),E.fromArray(r,o),h.subVectors(E,u),f.subVectors(s,u),h.cross(f),i[a]+=h.x,i[a+1]+=h.y,i[a+2]+=h.z,i[n]+=h.x,i[n+1]+=h.y,i[n+2]+=h.z,i[o]+=h.x,i[o+1]+=h.y,i[o+2]+=h.z;for(var m=1;m<this.prefabCount;m++)for(var p=0;p<c;p++)i[m*c+p]=i[p];this.normalizeNormals(),t.normal.needsUpdate=!0},THREE.BAS.PrefabBufferGeometry.prototype.createAttribute=function(e,t){var r=new Float32Array(this.prefabCount*this.prefabVertexCount*t),a=new THREE.BufferAttribute(r,t);return this.addAttribute(e,a),a},THREE.BAS.BaseAnimationMaterial=function(e){THREE.ShaderMaterial.call(this),this.shaderFunctions=[],this.shaderParameters=[],this.shaderVertexInit=[],this.shaderTransformNormal=[],this.shaderTransformPosition=[],this.setValues(e)},THREE.BAS.BaseAnimationMaterial.prototype=Object.create(THREE.ShaderMaterial.prototype),THREE.BAS.BaseAnimationMaterial.prototype.constructor=THREE.BAS.BaseAnimationMaterial,THREE.BAS.BaseAnimationMaterial.prototype._concatFunctions=function(){return this.shaderFunctions.join("\n")},THREE.BAS.BaseAnimationMaterial.prototype._concatParameters=function(){return this.shaderParameters.join("\n")},THREE.BAS.BaseAnimationMaterial.prototype._concatVertexInit=function(){return this.shaderVertexInit.join("\n")},THREE.BAS.BaseAnimationMaterial.prototype._concatTransformNormal=function(){return this.shaderTransformNormal.join("\n")},THREE.BAS.BaseAnimationMaterial.prototype._concatTransformPosition=function(){return this.shaderTransformPosition.join("\n")},THREE.BAS.BaseAnimationMaterial.prototype.setUniformValues=function(e){for(var t in e)if(t in this.uniforms){var r=this.uniforms[t],a=e[t];switch(r.type){case"c":r.value.set(a);break;case"v2":case"v3":case"v4":r.value.copy(a);break;case"f":case"t":r.value=a}}},THREE.BAS.PhongAnimationMaterial=function(e,t){THREE.BAS.BaseAnimationMaterial.call(this,e);var r=THREE.ShaderLib.phong;this.uniforms=THREE.UniformsUtils.merge([r.uniforms,this.uniforms]),this.lights=!0,this.vertexShader=this._concatVertexShader(),this.fragmentShader=r.fragmentShader,t.map&&(this.defines.USE_MAP=""),t.normalMap&&(this.defines.USE_NORMALMAP=""),this.setUniformValues(t)},THREE.BAS.PhongAnimationMaterial.prototype=Object.create(THREE.BAS.BaseAnimationMaterial.prototype),THREE.BAS.PhongAnimationMaterial.prototype.constructor=THREE.BAS.PhongAnimationMaterial,THREE.BAS.PhongAnimationMaterial.prototype._concatVertexShader=function(){return["#define PHONG","varying vec3 vViewPosition;","#ifndef FLAT_SHADED","\tvarying vec3 vNormal;","#endif",THREE.ShaderChunk.common,THREE.ShaderChunk.uv_pars_vertex,THREE.ShaderChunk.uv2_pars_vertex,THREE.ShaderChunk.displacementmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,this._concatFunctions(),this._concatParameters(),"void main() {",this._concatVertexInit(),THREE.ShaderChunk.uv_vertex,THREE.ShaderChunk.uv2_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.beginnormal_vertex,this._concatTransformNormal(),THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"#ifndef FLAT_SHADED","\tvNormal = normalize( transformedNormal );","#endif",THREE.ShaderChunk.begin_vertex,this._concatTransformPosition(),THREE.ShaderChunk.displacementmap_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.project_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"\tvViewPosition = - mvPosition.xyz;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n")}}]);